///////////////////////////////////////////////////////////
//  ParametrosRiscoClienteDBLib.cs
//  Implementation of the Class ParametrosRiscoClienteDBLib
//  Generated by Enterprise Architect
//  Created on:      26-jul-2010 19:23:18
//  Original author: amiguel
///////////////////////////////////////////////////////////



using Gradual.OMS.Risco.Regra.Persistencia.Entidades;

using System;

using System.Collections.Generic;
using Gradual.OMS.Risco.RegraLib.Dados;
using Gradual.OMS.Library.Db;
using System.Data;
using Gradual.OMS.Library;
using Gradual.OMS.Risco.Regra.Persistencia.DB;
using Gradual.OMS.Persistencia;



namespace Gradual.OMS.Risco.Regra.Persistencia.Entidades
{
    public class ParametroRiscoClienteDBLib : IEntidadeDbLib<ParametroRiscoClienteInfo>
    {

        private RegrasDbLib _dbLib = new RegrasDbLib("RISCO");

        #region IEntidadeDbLib<ParametroRiscoClienteInfo> Members

        public ConsultarObjetosResponse<ParametroRiscoClienteInfo> ConsultarObjetos(ConsultarObjetosRequest<ParametroRiscoClienteInfo> lRequest)
        {
            ConsultarObjetosResponse<ParametroRiscoClienteInfo> lRetorno = new ConsultarObjetosResponse<ParametroRiscoClienteInfo>();
            try
            {

                DataSet ds = _dbLib.ExecutarProcedure("prc_cliente_parametro_lst", "@id_cliente", lRequest.Condicoes[0].Valores[0]);
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    lRetorno.Resultado.Add(MontarObjeto(ds.Tables[0].Rows[i]));
                }

                return lRetorno;
            }
            catch (Exception ex)
            {
                Log.EfetuarLog(ex, lRequest);
                throw (ex);
            }
        }

        public ReceberObjetoResponse<ParametroRiscoClienteInfo> ReceberObjeto(ReceberObjetoRequest<ParametroRiscoClienteInfo> lRequest)
        {
            ReceberObjetoResponse<ParametroRiscoClienteInfo> lRetorno = new ReceberObjetoResponse<ParametroRiscoClienteInfo>();
            DataSet ds = _dbLib.ExecutarProcedure("prc_cliente_parametro_sel", "@id_cliente_parametro", int.Parse(lRequest.CodigoObjeto));
            try
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    lRetorno.Objeto = MontarObjeto(ds.Tables[0].Rows[0]);
                }
                return lRetorno;
            }
            catch (Exception ex)
            {
                Log.EfetuarLog(ex, lRequest);
                throw (ex);
            }
        }

        public RemoverObjetoResponse<ParametroRiscoClienteInfo> RemoverObjeto(RemoverObjetoRequest<ParametroRiscoClienteInfo> lRequest)
        {
            RemoverObjetoResponse<ParametroRiscoClienteInfo> lRetorno = new RemoverObjetoResponse<ParametroRiscoClienteInfo>();
            try
            {
                DataSet ds = _dbLib.ExecutarProcedure("prc_cliente_parametro_del", "@id_cliente_parametro", int.Parse(lRequest.CodigoObjeto));
                return lRetorno;
            }
            catch (Exception ex)
            {
                Log.EfetuarLog(ex, lRequest);
                throw (ex);
            }
        }

        public SalvarObjetoResponse<ParametroRiscoClienteInfo> SalvarObjeto(SalvarObjetoRequest<ParametroRiscoClienteInfo> lRequest)
        {
            Dictionary<string, object> paramsProc = new Dictionary<string, object>();
            SalvarObjetoResponse<ParametroRiscoClienteInfo> lResponse = new SalvarObjetoResponse<ParametroRiscoClienteInfo>();

            paramsProc.Add("@id_cliente_parametro", lRequest.Objeto.CodigoParametroCliente);
            paramsProc.Add("@id_cliente", lRequest.Objeto.CodigoCliente);
            paramsProc.Add("@id_parametro", lRequest.Objeto.Parametro.CodigoParametro);

            if (lRequest.Objeto.Grupo != null)
                paramsProc.Add("@id_grupo", lRequest.Objeto.Grupo.CodigoGrupo);
            
            if(lRequest.Objeto.Valor != null)
                paramsProc.Add("@vl_parametro", lRequest.Objeto.Valor);

            if (lRequest.Objeto.DataValidade != null)
                paramsProc.Add("@dt_validade", lRequest.Objeto.DataValidade);

            try
            {
                DataSet ds = _dbLib.ExecutarProcedure("prc_cliente_parametro_salvar", paramsProc);

                if (ds.Tables[0].Rows.Count > 0)
                {
                    lResponse.Objeto = MontarObjeto(ds.Tables[0].Rows[0]);
                }



                //SalvarParametroRiscoClienteValor(
                //    lRequest.Objeto
                //    , ReceberObjeto(
                //        new ReceberObjetoRequest<ParametroRiscoClienteInfo>()
                //        {
                //            CodigoObjeto = lRequest.Objeto.CodigoParametroCliente.ToString()
                //        }).Objeto);

                return lResponse;
            }
            catch (Exception ex)
            {
                Log.EfetuarLog(ex, lRequest);
                throw (ex);
            }

        }

        #endregion

        private ParametroRiscoClienteInfo MontarObjeto(DataRow dr)
        {
            ParametroRiscoClienteInfo lRetorno = new ParametroRiscoClienteInfo();
            lRetorno.CodigoCliente = (int)dr["id_cliente"];
            lRetorno.CodigoParametroCliente = (int)dr["id_cliente_parametro"];
            if (!Convert.IsDBNull(dr["dt_validade"]))
                lRetorno.DataValidade = DateTime.Parse(dr["dt_validade"].ToString());

            if (!Convert.IsDBNull(dr["vl_parametro"]))
            {
                lRetorno.Valor =  decimal.Parse( dr["vl_parametro"].ToString());
            }
            lRetorno.Parametro = new ParametroRiscoInfo()
            {
                CodigoParametro = (int)dr["id_parametro"],
                NomeParametro = dr["dscr_parametro"].ToString(),
                Bolsa = ((BolsaInfo)(int)dr["id_bolsa"])
            };

            ParametroRiscoClienteValorDbLib lPRCVDbLib = new ParametroRiscoClienteValorDbLib(lRetorno);

            lRetorno.ParametroRiscoClienteValores 
                = lPRCVDbLib.ConsultarObjetos(
                    new ConsultarObjetosRequest<ParametroRiscoClienteValorInfo>()).Resultado;

            return lRetorno;
        }

        private void SalvarParametroRiscoClienteValor(ParametroRiscoClienteInfo pPRCOriginal, ParametroRiscoClienteInfo pPRCSalvo)
        {
            // Inicializa
            ParametroRiscoClienteValorDbLib lPRCVDbLib = new ParametroRiscoClienteValorDbLib(pPRCOriginal);

            // Pega lista de grupos atuais
            List<ParametroRiscoClienteValorInfo> gValoresAtuais = pPRCSalvo.ParametroRiscoClienteValores;
            //usuarioGrupoDbLib.ConsultarObjetos(usuarioSalvo.CodigoUsuario);

            // Varre a lista de que foi pedido para salvar
            foreach (ParametroRiscoClienteValorInfo lPRCVItem in pPRCOriginal.ParametroRiscoClienteValores)
                if (gValoresAtuais.Find(p => p.CodigoParametroClienteValor == lPRCVItem.CodigoParametroClienteValor) == null)
                {
                    lPRCVDbLib.SalvarObjeto(new SalvarObjetoRequest<ParametroRiscoClienteValorInfo>() { Objeto = lPRCVItem });
                }

            // Verifica se existem grupos a remover
            foreach (ParametroRiscoClienteValorInfo lPRCVItem in gValoresAtuais)
                if (pPRCOriginal.ParametroRiscoClienteValores.Find(g => g.CodigoParametroClienteValor == lPRCVItem.CodigoParametroClienteValor) == null)
                {
                    lPRCVDbLib.RemoverObjeto(
                        new RemoverObjetoRequest<ParametroRiscoClienteValorInfo>() 
                        { CodigoObjeto = lPRCVItem.CodigoParametroClienteValor.ToString() });
                }

            // Atribui a coleção ao cliente salvo
            pPRCSalvo.ParametroRiscoClienteValores = pPRCOriginal.ParametroRiscoClienteValores;
        }
    }//end ParametrosRiscoClienteDBLib

}//end namespace Entidades