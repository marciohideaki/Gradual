//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Gradual.Intranet.Servicos.BancoDeDados.br.com.gradualinvestimentos.hb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CadastroHBSoap", Namespace="http://localhost/STWSCadCli")]
    public partial class CadastroHB : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertClienteHBOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertClienteHBCriptoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtivarClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DesativarClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback BloquearClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DesbloquearClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlterarSenhaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlterarAssinaturaDigitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlterarSenhaIntOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlterarAssinaturaDigitalIntOperationCompleted;
        
        private System.Threading.SendOrPostCallback CriptografarSenhaOperationCompleted;
        
        private System.Threading.SendOrPostCallback EqualsSenhaOperationCompleted;
        
        private System.Threading.SendOrPostCallback EqualsAssinaturaDigitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExisteAssinaturaDigitalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CadastroHB() {
            this.Url = global::Gradual.Intranet.Servicos.BancoDeDados.Properties.Settings.Default.Gradual_Intranet_Servicos_BancoDeDados_br_com_gradualinvestimentos_hb_CadastroHB;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertClienteHBCompletedEventHandler InsertClienteHBCompleted;
        
        /// <remarks/>
        public event InsertClienteHBCriptoCompletedEventHandler InsertClienteHBCriptoCompleted;
        
        /// <remarks/>
        public event AtivarClienteCompletedEventHandler AtivarClienteCompleted;
        
        /// <remarks/>
        public event DesativarClienteCompletedEventHandler DesativarClienteCompleted;
        
        /// <remarks/>
        public event BloquearClienteCompletedEventHandler BloquearClienteCompleted;
        
        /// <remarks/>
        public event DesbloquearClienteCompletedEventHandler DesbloquearClienteCompleted;
        
        /// <remarks/>
        public event AlterarSenhaCompletedEventHandler AlterarSenhaCompleted;
        
        /// <remarks/>
        public event AlterarAssinaturaDigitalCompletedEventHandler AlterarAssinaturaDigitalCompleted;
        
        /// <remarks/>
        public event AlterarSenhaIntCompletedEventHandler AlterarSenhaIntCompleted;
        
        /// <remarks/>
        public event AlterarAssinaturaDigitalIntCompletedEventHandler AlterarAssinaturaDigitalIntCompleted;
        
        /// <remarks/>
        public event CriptografarSenhaCompletedEventHandler CriptografarSenhaCompleted;
        
        /// <remarks/>
        public event EqualsSenhaCompletedEventHandler EqualsSenhaCompleted;
        
        /// <remarks/>
        public event EqualsAssinaturaDigitalCompletedEventHandler EqualsAssinaturaDigitalCompleted;
        
        /// <remarks/>
        public event ExisteAssinaturaDigitalCompletedEventHandler ExisteAssinaturaDigitalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/InsertClienteHB", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertClienteHB(string p_cadastro) {
            object[] results = this.Invoke("InsertClienteHB", new object[] {
                        p_cadastro});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertClienteHBAsync(string p_cadastro) {
            this.InsertClienteHBAsync(p_cadastro, null);
        }
        
        /// <remarks/>
        public void InsertClienteHBAsync(string p_cadastro, object userState) {
            if ((this.InsertClienteHBOperationCompleted == null)) {
                this.InsertClienteHBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertClienteHBOperationCompleted);
            }
            this.InvokeAsync("InsertClienteHB", new object[] {
                        p_cadastro}, this.InsertClienteHBOperationCompleted, userState);
        }
        
        private void OnInsertClienteHBOperationCompleted(object arg) {
            if ((this.InsertClienteHBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertClienteHBCompleted(this, new InsertClienteHBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/InsertClienteHBCripto", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertClienteHBCripto(string p_cadastro, bool p_cripto) {
            object[] results = this.Invoke("InsertClienteHBCripto", new object[] {
                        p_cadastro,
                        p_cripto});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertClienteHBCriptoAsync(string p_cadastro, bool p_cripto) {
            this.InsertClienteHBCriptoAsync(p_cadastro, p_cripto, null);
        }
        
        /// <remarks/>
        public void InsertClienteHBCriptoAsync(string p_cadastro, bool p_cripto, object userState) {
            if ((this.InsertClienteHBCriptoOperationCompleted == null)) {
                this.InsertClienteHBCriptoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertClienteHBCriptoOperationCompleted);
            }
            this.InvokeAsync("InsertClienteHBCripto", new object[] {
                        p_cadastro,
                        p_cripto}, this.InsertClienteHBCriptoOperationCompleted, userState);
        }
        
        private void OnInsertClienteHBCriptoOperationCompleted(object arg) {
            if ((this.InsertClienteHBCriptoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertClienteHBCriptoCompleted(this, new InsertClienteHBCriptoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/AtivarCliente", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AtivarCliente(string p_login) {
            object[] results = this.Invoke("AtivarCliente", new object[] {
                        p_login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AtivarClienteAsync(string p_login) {
            this.AtivarClienteAsync(p_login, null);
        }
        
        /// <remarks/>
        public void AtivarClienteAsync(string p_login, object userState) {
            if ((this.AtivarClienteOperationCompleted == null)) {
                this.AtivarClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtivarClienteOperationCompleted);
            }
            this.InvokeAsync("AtivarCliente", new object[] {
                        p_login}, this.AtivarClienteOperationCompleted, userState);
        }
        
        private void OnAtivarClienteOperationCompleted(object arg) {
            if ((this.AtivarClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtivarClienteCompleted(this, new AtivarClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/DesativarCliente", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DesativarCliente(string p_login) {
            object[] results = this.Invoke("DesativarCliente", new object[] {
                        p_login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DesativarClienteAsync(string p_login) {
            this.DesativarClienteAsync(p_login, null);
        }
        
        /// <remarks/>
        public void DesativarClienteAsync(string p_login, object userState) {
            if ((this.DesativarClienteOperationCompleted == null)) {
                this.DesativarClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDesativarClienteOperationCompleted);
            }
            this.InvokeAsync("DesativarCliente", new object[] {
                        p_login}, this.DesativarClienteOperationCompleted, userState);
        }
        
        private void OnDesativarClienteOperationCompleted(object arg) {
            if ((this.DesativarClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DesativarClienteCompleted(this, new DesativarClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/BloquearCliente", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BloquearCliente(string p_login) {
            object[] results = this.Invoke("BloquearCliente", new object[] {
                        p_login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BloquearClienteAsync(string p_login) {
            this.BloquearClienteAsync(p_login, null);
        }
        
        /// <remarks/>
        public void BloquearClienteAsync(string p_login, object userState) {
            if ((this.BloquearClienteOperationCompleted == null)) {
                this.BloquearClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBloquearClienteOperationCompleted);
            }
            this.InvokeAsync("BloquearCliente", new object[] {
                        p_login}, this.BloquearClienteOperationCompleted, userState);
        }
        
        private void OnBloquearClienteOperationCompleted(object arg) {
            if ((this.BloquearClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BloquearClienteCompleted(this, new BloquearClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/DesbloquearCliente", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DesbloquearCliente(string p_login) {
            object[] results = this.Invoke("DesbloquearCliente", new object[] {
                        p_login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DesbloquearClienteAsync(string p_login) {
            this.DesbloquearClienteAsync(p_login, null);
        }
        
        /// <remarks/>
        public void DesbloquearClienteAsync(string p_login, object userState) {
            if ((this.DesbloquearClienteOperationCompleted == null)) {
                this.DesbloquearClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDesbloquearClienteOperationCompleted);
            }
            this.InvokeAsync("DesbloquearCliente", new object[] {
                        p_login}, this.DesbloquearClienteOperationCompleted, userState);
        }
        
        private void OnDesbloquearClienteOperationCompleted(object arg) {
            if ((this.DesbloquearClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DesbloquearClienteCompleted(this, new DesbloquearClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/AlterarSenha", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AlterarSenha(string p_login, string p_senha) {
            object[] results = this.Invoke("AlterarSenha", new object[] {
                        p_login,
                        p_senha});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AlterarSenhaAsync(string p_login, string p_senha) {
            this.AlterarSenhaAsync(p_login, p_senha, null);
        }
        
        /// <remarks/>
        public void AlterarSenhaAsync(string p_login, string p_senha, object userState) {
            if ((this.AlterarSenhaOperationCompleted == null)) {
                this.AlterarSenhaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlterarSenhaOperationCompleted);
            }
            this.InvokeAsync("AlterarSenha", new object[] {
                        p_login,
                        p_senha}, this.AlterarSenhaOperationCompleted, userState);
        }
        
        private void OnAlterarSenhaOperationCompleted(object arg) {
            if ((this.AlterarSenhaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlterarSenhaCompleted(this, new AlterarSenhaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/AlterarAssinaturaDigital", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AlterarAssinaturaDigital(string p_login, string p_assDigital) {
            object[] results = this.Invoke("AlterarAssinaturaDigital", new object[] {
                        p_login,
                        p_assDigital});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AlterarAssinaturaDigitalAsync(string p_login, string p_assDigital) {
            this.AlterarAssinaturaDigitalAsync(p_login, p_assDigital, null);
        }
        
        /// <remarks/>
        public void AlterarAssinaturaDigitalAsync(string p_login, string p_assDigital, object userState) {
            if ((this.AlterarAssinaturaDigitalOperationCompleted == null)) {
                this.AlterarAssinaturaDigitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlterarAssinaturaDigitalOperationCompleted);
            }
            this.InvokeAsync("AlterarAssinaturaDigital", new object[] {
                        p_login,
                        p_assDigital}, this.AlterarAssinaturaDigitalOperationCompleted, userState);
        }
        
        private void OnAlterarAssinaturaDigitalOperationCompleted(object arg) {
            if ((this.AlterarAssinaturaDigitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlterarAssinaturaDigitalCompleted(this, new AlterarAssinaturaDigitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/AlterarSenhaInt", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AlterarSenhaInt(string p_login, string p_senha, string p_integrador) {
            object[] results = this.Invoke("AlterarSenhaInt", new object[] {
                        p_login,
                        p_senha,
                        p_integrador});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AlterarSenhaIntAsync(string p_login, string p_senha, string p_integrador) {
            this.AlterarSenhaIntAsync(p_login, p_senha, p_integrador, null);
        }
        
        /// <remarks/>
        public void AlterarSenhaIntAsync(string p_login, string p_senha, string p_integrador, object userState) {
            if ((this.AlterarSenhaIntOperationCompleted == null)) {
                this.AlterarSenhaIntOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlterarSenhaIntOperationCompleted);
            }
            this.InvokeAsync("AlterarSenhaInt", new object[] {
                        p_login,
                        p_senha,
                        p_integrador}, this.AlterarSenhaIntOperationCompleted, userState);
        }
        
        private void OnAlterarSenhaIntOperationCompleted(object arg) {
            if ((this.AlterarSenhaIntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlterarSenhaIntCompleted(this, new AlterarSenhaIntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/AlterarAssinaturaDigitalInt", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AlterarAssinaturaDigitalInt(string p_login, string p_assDigital, string p_integrador) {
            object[] results = this.Invoke("AlterarAssinaturaDigitalInt", new object[] {
                        p_login,
                        p_assDigital,
                        p_integrador});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AlterarAssinaturaDigitalIntAsync(string p_login, string p_assDigital, string p_integrador) {
            this.AlterarAssinaturaDigitalIntAsync(p_login, p_assDigital, p_integrador, null);
        }
        
        /// <remarks/>
        public void AlterarAssinaturaDigitalIntAsync(string p_login, string p_assDigital, string p_integrador, object userState) {
            if ((this.AlterarAssinaturaDigitalIntOperationCompleted == null)) {
                this.AlterarAssinaturaDigitalIntOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlterarAssinaturaDigitalIntOperationCompleted);
            }
            this.InvokeAsync("AlterarAssinaturaDigitalInt", new object[] {
                        p_login,
                        p_assDigital,
                        p_integrador}, this.AlterarAssinaturaDigitalIntOperationCompleted, userState);
        }
        
        private void OnAlterarAssinaturaDigitalIntOperationCompleted(object arg) {
            if ((this.AlterarAssinaturaDigitalIntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlterarAssinaturaDigitalIntCompleted(this, new AlterarAssinaturaDigitalIntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/CriptografarSenha", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CriptografarSenha(string p_login, string p_senha) {
            object[] results = this.Invoke("CriptografarSenha", new object[] {
                        p_login,
                        p_senha});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CriptografarSenhaAsync(string p_login, string p_senha) {
            this.CriptografarSenhaAsync(p_login, p_senha, null);
        }
        
        /// <remarks/>
        public void CriptografarSenhaAsync(string p_login, string p_senha, object userState) {
            if ((this.CriptografarSenhaOperationCompleted == null)) {
                this.CriptografarSenhaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCriptografarSenhaOperationCompleted);
            }
            this.InvokeAsync("CriptografarSenha", new object[] {
                        p_login,
                        p_senha}, this.CriptografarSenhaOperationCompleted, userState);
        }
        
        private void OnCriptografarSenhaOperationCompleted(object arg) {
            if ((this.CriptografarSenhaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CriptografarSenhaCompleted(this, new CriptografarSenhaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/EqualsSenha", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EqualsSenha(string p_login, string p_dado) {
            object[] results = this.Invoke("EqualsSenha", new object[] {
                        p_login,
                        p_dado});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EqualsSenhaAsync(string p_login, string p_dado) {
            this.EqualsSenhaAsync(p_login, p_dado, null);
        }
        
        /// <remarks/>
        public void EqualsSenhaAsync(string p_login, string p_dado, object userState) {
            if ((this.EqualsSenhaOperationCompleted == null)) {
                this.EqualsSenhaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEqualsSenhaOperationCompleted);
            }
            this.InvokeAsync("EqualsSenha", new object[] {
                        p_login,
                        p_dado}, this.EqualsSenhaOperationCompleted, userState);
        }
        
        private void OnEqualsSenhaOperationCompleted(object arg) {
            if ((this.EqualsSenhaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EqualsSenhaCompleted(this, new EqualsSenhaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/EqualsAssinaturaDigital", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EqualsAssinaturaDigital(string p_login, string p_dado) {
            object[] results = this.Invoke("EqualsAssinaturaDigital", new object[] {
                        p_login,
                        p_dado});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EqualsAssinaturaDigitalAsync(string p_login, string p_dado) {
            this.EqualsAssinaturaDigitalAsync(p_login, p_dado, null);
        }
        
        /// <remarks/>
        public void EqualsAssinaturaDigitalAsync(string p_login, string p_dado, object userState) {
            if ((this.EqualsAssinaturaDigitalOperationCompleted == null)) {
                this.EqualsAssinaturaDigitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEqualsAssinaturaDigitalOperationCompleted);
            }
            this.InvokeAsync("EqualsAssinaturaDigital", new object[] {
                        p_login,
                        p_dado}, this.EqualsAssinaturaDigitalOperationCompleted, userState);
        }
        
        private void OnEqualsAssinaturaDigitalOperationCompleted(object arg) {
            if ((this.EqualsAssinaturaDigitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EqualsAssinaturaDigitalCompleted(this, new EqualsAssinaturaDigitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/STWSCadCli/ExisteAssinaturaDigital", RequestNamespace="http://localhost/STWSCadCli", ResponseNamespace="http://localhost/STWSCadCli", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExisteAssinaturaDigital(string p_login) {
            object[] results = this.Invoke("ExisteAssinaturaDigital", new object[] {
                        p_login});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExisteAssinaturaDigitalAsync(string p_login) {
            this.ExisteAssinaturaDigitalAsync(p_login, null);
        }
        
        /// <remarks/>
        public void ExisteAssinaturaDigitalAsync(string p_login, object userState) {
            if ((this.ExisteAssinaturaDigitalOperationCompleted == null)) {
                this.ExisteAssinaturaDigitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExisteAssinaturaDigitalOperationCompleted);
            }
            this.InvokeAsync("ExisteAssinaturaDigital", new object[] {
                        p_login}, this.ExisteAssinaturaDigitalOperationCompleted, userState);
        }
        
        private void OnExisteAssinaturaDigitalOperationCompleted(object arg) {
            if ((this.ExisteAssinaturaDigitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExisteAssinaturaDigitalCompleted(this, new ExisteAssinaturaDigitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertClienteHBCompletedEventHandler(object sender, InsertClienteHBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertClienteHBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertClienteHBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertClienteHBCriptoCompletedEventHandler(object sender, InsertClienteHBCriptoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertClienteHBCriptoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertClienteHBCriptoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AtivarClienteCompletedEventHandler(object sender, AtivarClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AtivarClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AtivarClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DesativarClienteCompletedEventHandler(object sender, DesativarClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DesativarClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DesativarClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BloquearClienteCompletedEventHandler(object sender, BloquearClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BloquearClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BloquearClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DesbloquearClienteCompletedEventHandler(object sender, DesbloquearClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DesbloquearClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DesbloquearClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AlterarSenhaCompletedEventHandler(object sender, AlterarSenhaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlterarSenhaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlterarSenhaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AlterarAssinaturaDigitalCompletedEventHandler(object sender, AlterarAssinaturaDigitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlterarAssinaturaDigitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlterarAssinaturaDigitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AlterarSenhaIntCompletedEventHandler(object sender, AlterarSenhaIntCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlterarSenhaIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlterarSenhaIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AlterarAssinaturaDigitalIntCompletedEventHandler(object sender, AlterarAssinaturaDigitalIntCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlterarAssinaturaDigitalIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlterarAssinaturaDigitalIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CriptografarSenhaCompletedEventHandler(object sender, CriptografarSenhaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CriptografarSenhaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CriptografarSenhaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EqualsSenhaCompletedEventHandler(object sender, EqualsSenhaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EqualsSenhaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EqualsSenhaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EqualsAssinaturaDigitalCompletedEventHandler(object sender, EqualsAssinaturaDigitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EqualsAssinaturaDigitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EqualsAssinaturaDigitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExisteAssinaturaDigitalCompletedEventHandler(object sender, ExisteAssinaturaDigitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExisteAssinaturaDigitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExisteAssinaturaDigitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591